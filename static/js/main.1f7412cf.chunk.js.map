{"version":3,"sources":["logo.svg","components/Pagination.js","components/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","className","map","number","onClick","href","createPage","Posts","posts","loading","indexOfFirst","getName","name","formatEntry","len","log","LOG10E","console","id","post","src","types","type","join","p","Pokedex","App","useState","setPosts","setLoading","setCurrentPage","useEffect","a","pokemons","getPokedexByName","pokedex","names","pokemon_entries","pokemon","pokemon_species","getPokemonByName","fetchPokemon","indexOFLastPost","indexOfFirstPost","currentPosts","slice","length","page","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f7412cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, currentPage }) => {\r\n    const pageNumbers = []\r\n\r\n    for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n \r\n    const createPage = (number) => {\r\n        if (number === currentPage) {\r\n            return ((\r\n                <li key={number} className=\"page-item active\">\r\n                    <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\r\n                        {number}\r\n                    </a>\r\n                </li>\r\n            ))\r\n        } else {\r\n            return (\r\n                <li key={number} className=\"page-item \">\r\n                    <div onClick={() => paginate(number)} className=\"page-link\">\r\n                        {number}\r\n                    </div>\r\n                </li>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination justify-content-center\" >\r\n                {pageNumbers.map(number => (\r\n                        createPage(number)\r\n                    ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Posts = ({ posts, loading, indexOfFirst }) => {\r\n    const getName = (name) => {\r\n        /* HOTFIX: PokeAPI names don't always match with Pokemon Showdown assets */\r\n        if (name === \"mr-mime\") {\r\n            return \"mrmime\";\r\n        } else if (name === \"mime-jr\") {\r\n            return \"mimejr\";\r\n        } else if (name === \"wormadam-plant\"){\r\n            return \"wormadam\";\r\n        } else {\r\n            return name;\r\n        }\r\n    };\r\n\r\n    const formatEntry = (number) => {\r\n        var len = Math.log(number) * Math.LOG10E + 1 | 0;\r\n        console.log(`${len}`)\r\n        if (len === 1) {\r\n            return '00' + number;\r\n        } else if (len === 2) {\r\n            return '0' + number;\r\n        } else {\r\n            return number;\r\n        }\r\n    };\r\n\r\n    const getTypes = (types) => {\r\n        const resArray = types.map( type => type.type.name );\r\n        return resArray.join(', ');\r\n    };\r\n\r\n    if (loading) {\r\n        return <h1>Loading...</h1>\r\n    }\r\n    console.log(posts)\r\n    return (\r\n        <div className=\"posts-container\">\r\n            <ul id=\"pokedex\">\r\n                {posts.map((post, i) => (\r\n                    <li key={i} className=\"pokemon\">\r\n                        <img className=\"pokemon-image\" src={`https://play.pokemonshowdown.com/sprites/xyani/${getName(post.name)}.gif`}/>\r\n                        <h2 className=\"pokemon-title\">{getName(post.name)}</h2>\r\n                        <p className=\"pokemon-subtitle\">{getTypes(post.types)}</p>\r\n                        <h3 className=\"pokemon-number\">{formatEntry(indexOfFirst+1+i)}</h3>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts","import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\n\nimport Pagination from './components/Pagination';\nimport Posts from './components/Posts';\n\nimport Pokedex from 'pokedex-promise-v2';\nimport { ConsoleWriter } from 'istanbul-lib-report';\nconst p = new Pokedex();\n\nfunction App() {\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(6);\n \n  useEffect(() => {\n    const fetchPokemon = async () => {\n      const pokemons = [];\n      setLoading(true);\n      const pokedex = await p.getPokedexByName('original-sinnoh');\n      const names = pokedex.pokemon_entries.map(pokemon => (pokemon.pokemon_species.name == 'wormadam') ? 'wormadam-plant' :  pokemon.pokemon_species.name);\n      for (let name of names) {\n        const pokemon = await p.getPokemonByName(name);\n        pokemons.push(pokemon);\n      }\n      setPosts(pokemons);\n      setLoading(false);\n    }\n    fetchPokemon();\n  }, [])\n\n  // Get current posts\n   const indexOFLastPost = currentPage * postsPerPage;\n   const indexOfFirstPost = indexOFLastPost - postsPerPage;\n   const currentPosts = posts.slice(indexOfFirstPost, indexOFLastPost);\n\n   // Change page\n   const paginate = (page) => { setCurrentPage(page) };\n\n  return (\n    <div className=\"container text-center\">\n      <h1>SinnohDex</h1>\n        <Posts posts={currentPosts} loading={loading} indexOfFirst={indexOfFirstPost}/>\n        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} currentPage={currentPage} />\n      <div className=\"footer\">Made with ❤️ in React</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}